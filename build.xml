<!-- Originally built on TinkersConstruct build.xml -->
<project name="BlockPhysics" default="main">
    <property environment="env"/>

    <!-- Properties -->
    <property name="build.dir" value="build"/>
    <property name="src.dir" value="src"/>
    <property name="resources.dir" value="resources"/>

    <property name="download.dir" value="download"/>

    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir" value="bin"/>

    <property name="forge.dir" value="${build.dir}/forge"/>
    <property name="mcp.dir" value="${forge.dir}/mcp"/>

    <property name="mcpsrc.dir" value="${mcp.dir}/src"/>

    <property name="mc.version" value="1.6.4"/>
    <property name="forge.version" value="9.11.1.953"/>
    <property name="forge.name" value="forge-${mc.version}-${forge.version}-src.zip"/>

    <available property="forge-exists" file="${download.dir}/${forge.name}"/>
    <available file=".git" type="dir" property="git.present"/>

    <condition property="out-of-date">
        <not>
            <and>
                <available file="${download.dir}/${forge.name}"/>
                <available file="${mcpsrc.dir}"/>
            </and>
        </not>
    </condition>

    <mkdir dir="${download.dir}"/>

    <!-- Set full version -->
    <target name="initialize-version" depends="version-provided,version-not-provided,git-revision">
        <property name="project.version.full" value="${build.number}.${git.revision}"/>
    </target>

    <!-- Set unknown build number -->
    <target name="version-not-provided" unless="env.BUILD_NUMBER">
        <property name="build.number" value="DEV"/>
    </target>

    <!-- Set build number from environment -->
    <target name="version-provided" if="env.BUILD_NUMBER">
        <property name="build.number" value="${env.BUILD_NUMBER}"/>
    </target>

    <!-- Get git hash -->
    <target name="git-revision" if="git.present">
        <exec executable="git" dir="." outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
            <arg value="rev-parse"/>
            <arg value="--short"/>
            <arg value="HEAD"/>
        </exec>
        <echo message="Git revision: ${git.revision}"/>
    </target>

    <!-- Download necessary files -->
    <target name="download-files" depends="download-forge"/>

    <!-- Download forge (if it doesn't exist) -->
    <target name="download-forge" unless="forge-exists">
        <get src="http://files.minecraftforge.net/maven/net/minecraftforge/forge/${mc.version}-${forge.version}/${forge.name}" dest="${download.dir}" usetimestamp="True"/>
    </target>

    <!-- Setup mcp and forge -->
    <target name="setup" depends="download-files" if="out-of-date">

        <delete dir="${forge.dir}" failonerror="false"/>

        <unzip dest="${forge.dir}/.." src="${download.dir}/${forge.name}"/>

        <!-- Fix executable permissions -->
        <chmod dir="${forge.dir}" perm="ugo+rx" includes="**.sh"/>

        <!-- Install forge -->
        <exec dir="${forge.dir}" executable="${forge.dir}/fml/python/python_fml" osfamily="windows">
            <arg line="install.py --no-assets"/>
        </exec>

        <exec dir="${forge.dir}" executable="python" osfamily="unix">
            <arg line="install.py --no-assets"/>
        </exec>

    </target>

    <!-- Copy sources -->
    <target name="copy-src">
        <copy todir="${mcpsrc.dir}/minecraft">
            <fileset dir="${src.dir}"/>
            <filterset>
                <filter token="VERSION" value="${project.version.full}" />
            </filterset>
        </copy>
    </target>

    <target name="compile" depends="initialize-version,setup,copy-src">
        <delete dir="${classes.dir}"/>
        <mkdir dir="${classes.dir}"/>

        <!-- Recompile -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c recompile.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="recompile.sh"/>
        </exec>

        <!-- Check for failure -->
        <fail message="MCP failed to build">
            <condition>
                <resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
            </condition>
        </fail>
    </target>

    <target name="reobf" depends="compile">
        <!-- Reobfuscate -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c reobfuscate_srg.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="reobfuscate_srg.sh"/>
        </exec>

        <!-- Copy classes -->
        <mkdir dir="${classes.dir}/blockphysics"/>
        <copy todir="${classes.dir}/blockphysics">
            <fileset dir="${mcp.dir}/reobf/minecraft/blockphysics"/>
        </copy>

        <!-- Copy resources -->
        <copy file="${resources.dir}/mcmod.info" todir="${classes.dir}" outputencoding="UTF-8">
            <filterset>
                <filter token="VERSION" value="${project.version.full}" />
                <filter token="MCVERSION" value="${mc.version}" />
            </filterset>
        </copy>
        <copy todir="${classes.dir}">
            <fileset dir="${resources.dir}">
                <exclude name="mcmod.info"/>
                <exclude name="Manifest.mf"/>
            </fileset>
        </copy>

        <!-- Reset src dir to post-forge-install state -->
        <delete dir="${mcpsrc.dir}/minecraft/mcp"/>
    </target>

    <!-- Package obfuscated jar -->
    <target name="package" depends="reobf">
        <delete dir="${jar.dir}"/>
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/BlockPhysics-${mc.version}-${project.version.full}.jar" basedir="${classes.dir}" manifest="${resources.dir}/Manifest.mf"/>
    </target>
    
    <!-- Package deobfuscated jar-->
    <target name="pack-dev" depends="initialize-version">
        <mkdir dir="${build.dir}/devpack"/>

        <!-- Copy classes -->
        <copy todir="${build.dir}/devpack/blockphysics">
            <fileset dir="${mcp.dir}/bin/minecraft/blockphysics"/>
        </copy>

        <!-- Copy resources -->
        <copy file="${resources.dir}/mcmod.info" todir="${build.dir}/devpack" outputencoding="UTF-8">
            <filterset>
                <filter token="VERSION" value="${project.version.full}" />
                <filter token="MCVERSION" value="${mc.version}" />
            </filterset>
        </copy>
        <copy todir="${build.dir}/devpack">
            <fileset dir="${resources.dir}">
                <exclude name="mcmod.info"/>
                <exclude name="Manifest.mf"/>
            </fileset>
        </copy>

        <!-- Build deobf jar -->
        <mkdir dir="${jar.dir}/dev"/>
        <jar destfile="${jar.dir}/dev/BlockPhysics-${mc.version}-${project.version.full}-Deobf.jar" basedir="${build.dir}/devpack" manifest="${resources.dir}/Manifest.mf"/>
    </target>

    <!-- Default target to run -->
    <target name="main" depends="package"/>

</project>